export default class{constructor(options){this.options=options||{},this.options.selectors=this.options.selectors||{},this.options.selectors.popup=this.options.selectors.popup||"data-popup",this.targetSelector=this.options.selectors.target||"data-target",this.toggleSelector=this.options.selectors.toggle||"data-popup-toggle",this.selector=`[${this.options.selectors.popup}]`,this.openSelector=`[${this.toggleSelector}='open']`,this.closeSelector=`[${this.toggleSelector}='close']`,this._findPopups(this.selector),this._findPopupHandler(this.openSelector)}_setDisplayAttr(el,display=!0){return display?el.setAttribute("open",""):el.removeAttribute("open")}_setIndex(el,i){let date=new Date;return el.style.zIndex="number"==typeof i?1:(parseInt(window.getComputedStyle(el,null).getPropertyValue("z-index"))||1)+(date.getMinutes()+date.getSeconds())}_findPopups(selector){return new Promise((resolve,reject)=>{document.querySelectorAll(selector).forEach((el,index)=>{if(el.popup)return resolve(this);el.show=(e=>{e&&e.preventDefault(),this._setDisplayAttr(el,1),this._setIndex(el)}),el.close=(()=>{this._setDisplayAttr(el,0),this._setIndex(el,1)}),el.popup=!0,this._findPopupCloseHandler(`${selector} ${this.closeSelector}`),resolve(this)})})}_findPopupHandler(selector){document.querySelectorAll(selector).forEach((el,index)=>{let target=el.getAttribute(this.targetSelector);this._findTargetPopup(target).then(e=>{el.removeEventListener("click",e.show),el.addEventListener("click",e.show)})})}_findPopupCloseHandler(selector){document.querySelectorAll(selector).forEach((el,val)=>{el.removeEventListener("click",this._closeParentPopup),el.addEventListener("click",this._closeParentPopup)})}_findTargetPopup(target){return new Promise((resolve,reject)=>{document.querySelectorAll(target).forEach((el,index)=>{resolve(el)})})}_closeParentPopup(e){return e.preventDefault(),null!=this.offsetParent.getAttribute("data-popup")?this.offsetParent.close():this.offsetParent.offsetParent.close()}closeAll(){return new Promise((resolve,reject)=>{document.querySelectorAll(this.selector).forEach((el,index)=>{el.close(),setTimeout(()=>{resolve(this)},300)})})}close(selectors=[]){return new Promise((resolve,reject)=>{selectors.forEach((val,index)=>{document.querySelectorAll(val).forEach((el,i)=>{el.close(),resolve(this)})})})}};